import { scenario, http, constantConcurrentUsers, during, exec } from "gatling/ts/core";
import { StringBody } from "gatling/ts/http";
import { DurationHelper } from "gatling/ts/core/dsl";

// ğŸ”¹ GLOBALNA zmienna na token (bÄ™dzie dostÄ™pna dla wszystkich uÅ¼ytkownikÃ³w)
let globalToken: string | null = null;

// ğŸ”¹ Jednorazowe pobranie tokena przed rozpoczÄ™ciem symulacji
const getToken = exec(
    http("Get Auth Token")
        .post("/auth/login")
        .body(StringBody(JSON.stringify({ username: "testUser", password: "superSecret" })))
        .header("Content-Type", "application/json")
        .check((response) => {
            globalToken = response.json("access_token"); // ğŸ“Œ Zapisz token do globalnej zmiennej
            console.log(`âœ… Globalny token pobrany: ${globalToken}`); // Debug
        })
);

// ğŸ”¹ Zapytanie autoryzowane uÅ¼ywajÄ…ce **globalnego tokena**
const makeAuthenticatedRequest = exec(
    http("Protected Request")
        .get("/api/protected")
        .header("Authorization", () => `Bearer ${globalToken}`) // ğŸ“Œ Globalny token
);

// ğŸ”¹ Scenariusz pobierania tokena (tylko raz)
const initTokenScenario = scenario("Init Token").exec(getToken);

// ğŸ”¹ Scenariusz testowy dla uÅ¼ytkownikÃ³w
const testScenario = scenario("Test API")
    .exec(makeAuthenticatedRequest) // ğŸ”¥ KaÅ¼dy uÅ¼ytkownik uÅ¼ywa gotowego tokena
    .during(DurationHelper.hours(2), "repeat-request", exec(makeAuthenticatedRequest)); // ğŸ”¥ 2 godziny testÃ³w

// ğŸ”¹ Symulacja (pobranie tokena przed testami)
export const testSimulation = {
    scenarios: [initTokenScenario, testScenario], // ğŸ”¥ Pobranie tokena przed uruchomieniem uÅ¼ytkownikÃ³w
    inject: [
        constantConcurrentUsers(1).during(DurationHelper.seconds(1)), // ğŸ”¥ Pobierz token (1 uÅ¼ytkownik, raz)
        constantConcurrentUsers(50).during(DurationHelper.hours(2)), // ğŸ”¥ 50 uÅ¼ytkownikÃ³w przez 2 godziny
    ],
};
