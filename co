stages:
- stage: Build
  jobs:
  - job: BuildDockerImage
    displayName: 'Build Docker Image'
    pool:
      vmImage: 'ubuntu-latest' # Używasz vmImage, co jest poprawne dla hostowanych agentów
    steps:
    - task: Docker@2
      displayName: 'Build and push image to ACR'
      inputs:
        containerRegistry: 'P08399-hceACR-ACR-write'
        repository: 'P08399/gatling-test'
        command: 'buildAndPush' # Używamy buildAndPush, aby zbudować i od razu wysłać do ACR
        dockerfile: 'Dockerfile'
        tags: '1.0'

  - job: ContainerScanningAndSync
    displayName: 'Container Scanning and Sync'
    dependsOn: BuildDockerImage # Ten job uruchomi się tylko po sukcesie joba 'BuildDockerImage'
    pool:
      name: BSK-only-agent-pool # Używasz dedykowanej puli agentów
    steps:
    - task: CDaaSContainerSync@2 # Krok 1: Kopiowanie do Harbora
      displayName: 'Copy gatling-test:1.0 to BSK Harbor registry'
      retryCountOnFailure: 5
      inputs:
        ImageName: 'p08399hceacr.azurecr.io/gatling-test:1.0' # Zakładam, że ten obraz został zbudowany w poprzednim jobie i jest dostępny w ACR
        sourceCredentials: 'serviceconnection'
        sourceEndpoint: 'P08399-hceACR-ACR-read'
        targetCredentials: 'serviceconnection'
        targetEndpoint: 'P08399-Harbor-PUSH' # Endpoint dla Harbora

    - task: BskContainerScanning@3 # Krok 2: Skanowanie
      displayName: 'Scan Container'
      continueOnError: true
      inputs:
        scanningRegistry: 'acr'
        ScanningServiceEndpoint: 'P08399-BSK-Prisma-SC'
        ACREndpoint: 'P08399-hceACR-ACR-read'
        Image: 'P08399/gatling-test' # Skanujesz ten sam obraz, który został zbudowany/skopiowany
        Tag: '1.0'
