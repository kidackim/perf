#!/bin/bash
set -eo pipefail

# Pobieranie wersji z package.json
VERSION=$(jq -r '.devDependencies."@gatling.io/cli"' package.json | sed 's/.*#//')
[ -z "$VERSION" ] && { echo "B≈ÇƒÖd: Nieprawid≈Çowa wersja w package.json"; exit 1; }

# Sta≈Çe konfiguracyjne
REPO_URL="https://github.com/gatling/gatling-js"
ZIP_URL="${REPO_URL}/releases/download/v${VERSION}/gatling-js-bundle-${VERSION}-Linux-x64.zip"
CACHE_DIR="${HOME}/.cache/gatling-js"
INSTALL_DIR="./node_modules/@gatling.io/cli"

# Tworzenie katalog√≥w roboczych
mkdir -p "${CACHE_DIR}" "${INSTALL_DIR}"

# Pobieranie i walidacja archiwum
echo "üîÑ Pobieranie Gatling JS w wersji ${VERSION}"
wget -qc "${ZIP_URL}" -O "${CACHE_DIR}/bundle.zip" --show-progress || {
  echo "‚ùå B≈ÇƒÖd pobierania pliku!"
  echo "Sprawd≈∫ dostƒôpno≈õƒá wersji: ${ZIP_URL}"
  exit 1
}

# Weryfikacja integralno≈õci pliku
echo "üîç Weryfikacja archiwum..."
unzip -tq "${CACHE_DIR}/bundle.zip" || {
  echo "‚ùå Uszkodzone archiwum!"
  rm -f "${CACHE_DIR}/bundle.zip"
  exit 1
}

# Instalacja bezpo≈õrednio z archiwum
echo "üöÄ Instalacja pakietu..."
unzip -qoj "${CACHE_DIR}/bundle.zip" -d "${INSTALL_DIR}"

# Inicjalizacja ≈õrodowiska
echo "‚öôÔ∏è Inicjalizacja Gatling..."
(cd "${INSTALL_DIR}" && npx gatling install --quiet)

# Czyszczenie cache
echo "üßπ Czyszczenie plik√≥w tymczasowych..."
rm -f "${CACHE_DIR}/bundle.zip"

echo -e "\n‚úÖ Instalacja zako≈Ñczona pomy≈õlnie!"
echo "   Wersja Gatling: ${VERSION}"
echo "   ≈öcie≈ºka instalacji: ${INSTALL_DIR}"
