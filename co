#!/bin/bash

# Ścieżka do katalogu z wynikami Gatling
GATLING_DIR="target/gatling"

# Sprawdź czy katalog istnieje
if [ ! -d "$GATLING_DIR" ]; then
    echo "Błąd: Katalog $GATLING_DIR nie istnieje."
    exit 1
fi

# Wykryj system operacyjny
OS_TYPE=$(uname)

# Znajdź najnowszy katalog jssimulation-* w zależności od systemu
if [ "$OS_TYPE" = "Darwin" ]; then
    # macOS (Darwin) - używa BSD find
    LATEST_DIR=$(find "$GATLING_DIR" -maxdepth 1 -type d -name "jssimulation-*" -exec stat -f "%m %N" {} \; | sort -nr | head -1 | cut -d' ' -f2-)
else
    # Linux - używa GNU find
    LATEST_DIR=$(find "$GATLING_DIR" -maxdepth 1 -type d -name "jssimulation-*" -printf "%T@ %p\n" | sort -nr | head -1 | cut -d' ' -f2-)
fi

if [ -z "$LATEST_DIR" ]; then
    echo "Błąd: Nie znaleziono katalogów jssimulation-* w $GATLING_DIR."
    exit 1
fi

echo "Znaleziono najnowszy katalog: $LATEST_DIR"

# Sprawdź czy istnieje plik stats.js w podkatalogu js
STATS_FILE="$LATEST_DIR/js/stats.js"

if [ ! -f "$STATS_FILE" ]; then
    echo "Błąd: Nie znaleziono pliku $STATS_FILE."
    exit 1
fi

echo "Znaleziono plik stats.js: $STATS_FILE"

# Nazwa pliku XML (w bieżącym katalogu)
XML_FILE="TEST-gatling-results.xml"

# Uruchom skrypt raport.mjs, aby wygenerować raport XML
echo "Generowanie raportu XML..."
node raport.mjs "$STATS_FILE" "$XML_FILE"

# Sprawdź czy plik XML został wygenerowany
if [ ! -f "$XML_FILE" ]; then
    echo "Błąd: Nie udało się wygenerować pliku $XML_FILE."
    exit 1
fi

echo "Raport XML został wygenerowany: $XML_FILE"

# Nazwa pliku HTML (w bieżącym katalogu)
HTML_FILE="gatling-report.html"

# Uruchom skrypt tohtml.mjs, aby wygenerować raport HTML
echo "Generowanie raportu HTML..."
node tohtml.mjs "$XML_FILE" "$HTML_FILE"

# Sprawdź czy plik HTML został wygenerowany
if [ ! -f "$HTML_FILE" ]; then
    echo "Błąd: Nie udało się wygenerować pliku $HTML_FILE."
    exit 1
fi

echo "Raport HTML został wygenerowany: $HTML_FILE"
echo "Proces zakończony pomyślnie."
