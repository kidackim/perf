function loadConfig() {
  // Gatling.instance jest dostępne w scenariuszach Gatling-js
  const file = new java.io.File(gatling.core.Predef.configuration.core().resourcesDirectory(), "config.json");
  const fr = new java.io.FileReader(file);
  const br = new java.io.BufferedReader(fr);
  let line;
  let jsonString = "";

  while ((line = br.readLine()) != null) {
    jsonString += line;
  }

  br.close();
  fr.close();

  // Używamy eval do parsowania JSON-a w Rhino (ostrożnie z tym!)
  // Alternatywnie, można użyć biblioteki JSON parsera dodanej jako zależność projektu
  const config = eval("(" + jsonString + ")"); // PARSOWANIE JSON!

  return config;
}



// java.d.ts
declare namespace java {
  namespace io {
    class File {
      constructor(pathname: string);
      constructor(parent: string, child: string);
      getPath(): string;
    }
    class FileReader {
      constructor(file: java.io.File);
      close(): void;
    }
    class BufferedReader {
      constructor(reader: java.io.Reader);
      readLine(): string | null;
      close(): void;
    }
    interface Reader {}
  }
}
