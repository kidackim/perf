  # --- NOWA, NIEZAWODNA LOGIKA PARSOWANIA Z XMLSTARLET ---
    REPORTS_PATH="$(System.DefaultWorkingDirectory)/playbooks/fetched_reports"
    FAILED_LIST_WITH_REASON=""

    for file in $REPORTS_PATH/*.xml; do
      if [ -f "$file" ]; then
        # xmlstarlet "rozumie" strukturę XML i wyciąga dane niezależnie od formatowania
        FAILED_LIST_WITH_REASON+=$(xmlstarlet sel \
          -t -m "//testcase[failure]" \
          -o "- " -v "@name" -n \
          -o "  └─ Powód: " -v "failure/@message" -n \
          "$file")
      fi
    done

    # Ustawienie domyślnej wiadomości, jeśli nie ma błędów
    if [ -z "$FAILED_LIST_WITH_REASON" ]; then FAILED_LIST_WITH_REASON="Brak testów zakończonych porażką."; fi

 echo "failed_tests_list: |" >> $EXTRA_VARS_FILE
    # Użycie printf jest bezpieczniejsze dla potencjalnych specjalnych znaków w nazwach testów
    printf '%s\n' "$FAILED_LIST_WITH_REASON" | sed 's/^/  /' >> $EXTRA_VARS_FILE
