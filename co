FROM registry.access.redhat.com/ubi9/nodejs-22

ARG MICRODIR=/microdir
ARG PIP_ROOT_USER_ACTION=ignore
ARG LANG=en_US.UTF-8
ARG LANGUAGE=en_US.UTF-8
ARG LC_COLLATE=C
ARG LC_CTYPE=en_US.UTF-8
ARG NLS_OS_CHARSET=AL32UTF8
ARG USE_GKE_GCLOUD_AUTH_PLUGIN=True

LABEL maintainer="ci.coding.pl"

ENV PIP_ROOT_USER_ACTION=${PIP_ROOT_USER_ACTION} \
    LANG=${LANG} \
    LANGUAGE=${LANGUAGE} \
    LC_COLLATE=${LC_COLLATE} \
    LC_CTYPE=${LC_CTYPE} \
    NLS_OS_CHARSET=${NLS_OS_CHARSET} \
    USE_GKE_GCLOUD_AUTH_PLUGIN=${USE_GCLOUD_AUTH_PLUGIN} \
    NODE_TLS_REJECT_UNAUTHORIZED=0

WORKDIR /opt/app-root/src

USER root

# Instalacja narzędzi kompilacji, w tym 'unzip'
RUN dnf update -y && \
    dnf install -y make gcc gcc-c++ autoconf automake libtool unzip tar \
                   zlib-devel && \
    dnf clean all && rm -rf /var/cache/dnf/*

# Kompilacja i instalacja SQLITE ze źródeł
COPY sqlite-autoconf-3500200.zip /tmp/
RUN cd /tmp && \
    unzip sqlite-autoconf-3500200.zip && \
    cd sqlite-autoconf-3500200 && \
    ./configure --prefix=/usr --disable-static && \
    make && \
    make install && \
    ldconfig && \
    rm -rf /tmp/sqlite-autoconf-3500200 /tmp/sqlite-autoconf-3500200.zip

# Reszta Dockerfile dla Twojej aplikacji
RUN mkdir -p /app && \
    chown 1001:0 /app

USER 1001

WORKDIR /app

COPY package*.json ./

RUN npm config set strict-ssl false && \
    npm install --unsafe-perm

COPY . .

COPY sample.env .env

CMD ["/bin/sh", "-c", "npm run test"]
