FROM registry.access.redhat.com/ubi9/nodejs-22 AS builder

ARG MICRODIR=/microdir
ARG PIP_ROOT_USER_ACTION=ignore
ARG LANG=en_US.UTF-8
ARG LANGUAGE=en_US.UTF-8
ARG LC_COLLATE=C
ARG LC_CTYPE=en_US.UTF-8
ARG NLS_OS_CHARSET=AL32UTF8
ARG USE_GKE_GCLOUD_AUTH_PLUGIN=True

LABEL maintainer="ci.coding.pl"

ENV PIP_ROOT_USER_ACTION=${PIP_ROOT_USER_ACTION} \
    LANG=${LANG} \
    LANGUAGE=${LANGUAGE} \
    LC_COLLATE=${LC_COLLATE} \
    LC_CTYPE=${LC_CTYPE} \
    NLS_OS_CHARSET=${NLS_OS_CHARSET} \
    USE_GKE_GCLOUD_AUTH_PLUGIN=${USE_GKE_GCLOUD_AUTH_PLUGIN} \
    NODE_TLS_REJECT_UNAUTHORIZED=0

WORKDIR /opt/app-root/src

USER root

RUN dnf update -y && \
    dnf install -y git sqlite && \
    dnf clean all && rm -rf /var/cache/dnf/

COPY package*.json ./
RUN npm config set strict-ssl false && \
    npm install --unsafe-perm

COPY . .
COPY sample.env .env

FROM registry.access.redhat.com/ubi9/nodejs-22

ENV NODE_TLS_REJECT_UNAUTHORIZED=0

USER root
RUN mkdir -p /app && \
    chown 1001:0 /app

USER 1001

WORKDIR /app

COPY --from=builder /opt/app-root/src/node_modules ./node_modules
COPY --from=builder /opt/app-root/src/package*.json ./
COPY --from=builder /opt/app-root/src/sample.env ./sample.env
COPY --from=builder /opt/app-root/src/ .

CMD ["/bin/sh", "-c", "npm run test"]
