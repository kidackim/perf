// W pliku: TS commands.d.ts

// 1. Zdefiniuj Interfejs Odpowiedzi API (LoginResponse)
interface LoginResponse {
    access_token: string;
    refresh_token: string;
    session_state: string;
    // ... reszta pól
}

// 2. Utwórz Typ Modułu Implementacji (Klucz do rozwiązania konfliktu)
// Ten kod mówi TypeScriptowi: Stwórz typ 'SantiagoCommands' z modułu implementacji.
type SantiagoCommands = typeof import("./santiago_commands_hce");

// 3. Rozszerzenie Interfejsu Globalnego (Chainable)
declare global {
    namespace Cypress {
        interface Chainable {
            // Wygodniejsze użycie: teraz odwołujemy się do typu modułu:
            
            /**
             * @returns {Cypress.Chainable<LoginResponse>}
             * @see {./santiago_commands_hce.js}
             */
            login: SantiagoCommands['login'];

            /**
             * @see {./santiago_commands_hce.js}
             */
            rengchildinappverify: SantiagoCommands['rengchildinappverify'];
            
            // ... i tak dalej dla innych komend

        }
    }
}
